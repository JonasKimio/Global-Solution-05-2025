"use client";

import { useEffect, useState } from "react";
import { listalinha } from "@/data/listaLinha";
import { calcularTempo } from "@/data/tempo";
import Link from "next/link";
import Jogo from "@/components/Jogo";
import { use } from "react";
import Image from "next/image";

type detalhesEstacaoProps = {
  params: Promise<{
    idl: string;
  }>;
};

function Page(props: detalhesEstacaoProps) {
  const params = use(props.params);
  const linhaID = parseInt(params.idl);

  const linha = listalinha.find((linha) => linha.idl === linhaID);

  const [tempo, setTempo] = useState(calcularTempo());
  const [jogoAtivo, setJogoAtivo] = useState(false);

  useEffect(() => {
    const intervalo = setInterval(() => {
      setTempo((prev) => {
        if (prev <= 1) {
          clearInterval(intervalo);
          return 0;
        }
        return prev - 1;
      });
    }, 1000);

    return () => clearInterval(intervalo);
  }, []); // <-- IMPORTANTE: array vazio para rodar só 1 vez

  const estilo =
    linha?.linha === 1
      ? {
          container: "bg-gray-300",
          titulo: "bg-gray-600 text-white",
          imagem: "/imagens/linha8.jpg",
          imagemalt: "Imagem da Linha Diamante",
        }
      : {
          container: "bg-green-300",
          titulo: "bg-green-600 text-white",
          imagem: "/imagens/linha9.jpg",
          imagemalt: "Imagem da Linha Esmeralda",
        };

  const iniciarJogo = () => {
    setJogoAtivo(true);
  };

  const sairDoJogo = () => {
    setJogoAtivo(false);
  };

  if (!linha) {
    return (
      <div className="flex items-center justify-center p-6 min-h-screen">
        <div className="bg-red-500 text-white p-6 rounded-lg">
          <h2 className="text-xl font-bold">Estação não encontrada</h2>
          <p>Desculpe, não conseguimos encontrar a estação que você procura.</p>
          <Link href="/" className="text-blue-500 mt-4">
            Voltar para a página inicial
          </Link>
        </div>
      </div>
    );
  }

  return (
    <div className="relative flex items-center justify-center p-6 min-h-screen">
      {jogoAtivo ? (
        <>
          <div className="absolute inset-0 bg-black opacity-75 z-0"></div>
          <div className="z-10">
            <Jogo linha={linha?.linha ?? 1} tempo={tempo} onExit={sairDoJogo} />
          </div>
        </>
      ) : (
        <div
          className={`${estilo.container} rounded-lg shadow-lg w-full max-w-4xl p-6 mt-5 mb-auto z-20`}
        >
          <h2 className={`text-2xl font-bold text-center mb-6 ${estilo.titulo}`}>
            {linha?.nome}
          </h2>
          <div className="flex flex-col items-center bg-white">
            <p className="text-gray-700 mt-5">
              <strong>Estação:</strong> {linha?.nome}
            </p>
            <p className="text-gray-700">
              <strong>Tempo Estimado:</strong>{" "}
              {tempo > 0 ? `${Math.floor(tempo / 60)}m ${tempo % 60}s` : "Seu Trem Chegou!"}
            </p>
            <Image
              width={100}
              height={100}
              src={estilo.imagem}
              alt={estilo.imagemalt}
              className="w-72 h-auto rounded-lg object-contain shadow-lg m-5"
            />
          </div>
          <div className="flex justify-center mt-6 space-x-4">
            <Link
              href="/"
              className="inline-block py-2 px-4 bg-blue-600 text-white text-sm border-2 border-blue-600 rounded-full hover:bg-white hover:text-blue-600 transition-all duration-300"
            >
              Voltar
            </Link>
            <button
              onClick={iniciarJogo}
              className="inline-block py-2 px-4 bg-blue-600 text-white text-sm border-2 border-blue-600 rounded-full hover:bg-white hover:text-blue-600 transition-all duration-300"
            >
              Jogar
            </button>
          </div>
        </div>
      )}
    </div>
  );
}

export default Page;